// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ngrok URL
const http = require('http');

function getNgrokUrl() {
  return new Promise((resolve, reject) => {
    const req = http.get('http://localhost:4040/api/tunnels', (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const tunnels = JSON.parse(data);
          const httpsUrl = tunnels.tunnels.find(t => t.proto === 'https')?.public_url;
          if (httpsUrl) {
            console.log('\nüéâ NGROK URL –ì–û–¢–û–í!');
            console.log('üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç URL –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –±–æ—Ç–∞:');
            console.log(`\n${httpsUrl}\n`);
            console.log('üì± –¢–µ–ø–µ—Ä—å –æ—Ç–∫—Ä–æ–π—Ç–µ @BotFather –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã –∏–∑ telegram-bot-setup.txt');
            resolve(httpsUrl);
          } else {
            reject('HTTPS tunnel not found');
          }
        } catch (error) {
          reject(`Parse error: ${error.message}`);
        }
      });
    });
    
    req.on('error', (error) => {
      reject(`Request error: ${error.message}`);
    });
    
    req.setTimeout(5000, () => {
      req.destroy();
      reject('Timeout');
    });
  });
}

// –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å URL –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
let attempts = 0;
const maxAttempts = 15;

function tryGetUrl() {
  attempts++;
  console.log(`–ü–æ–ø—ã—Ç–∫–∞ ${attempts}/${maxAttempts}: –ü—Ä–æ–≤–µ—Ä—è–µ–º ngrok...`);
  
  getNgrokUrl()
    .then(url => {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω URL!');
      process.exit(0);
    })
    .catch(error => {
      if (attempts >= maxAttempts) {
        console.log('\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å ngrok URL.');
        console.log('üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å ngrok –≤—Ä—É—á–Ω—É—é:');
        console.log('   npx ngrok http 5173');
        console.log('   –ó–∞—Ç–µ–º –æ—Ç–∫—Ä–æ–π—Ç–µ http://localhost:4040 –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
        process.exit(1);
      } else {
        setTimeout(tryGetUrl, 2000);
      }
    });
}

console.log('üîÑ –û–∂–∏–¥–∞–µ–º –∑–∞–ø—É—Å–∫–∞ ngrok...');
tryGetUrl();
