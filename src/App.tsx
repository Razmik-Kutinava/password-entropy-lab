// /src/App.tsx
import { createSignal, createMemo, onMount, For, Show } from "solid-js";
import { assessPassword, assessPasswordAllPolicies, NIST_MODERATE, type Assessment, type Policy, ALL_POLICIES, POLICY_CATEGORIES } from "./core/assessPassword";
import { exportPDF, exportJSON } from "./utils/exportPDF";

// –¢–∏–ø—ã –¥–ª—è Telegram WebApp
declare global {
  interface Window {
    Telegram?: {
      WebApp: {
        ready(): void;
        expand(): void;
        close(): void;
        MainButton: {
          text: string;
          color: string;
          textColor: string;
          isVisible: boolean;
          isActive: boolean;
          setText(text: string): void;
          onClick(callback: () => void): void;
          show(): void;
          hide(): void;
          enable(): void;
          disable(): void;
        };
        BackButton: {
          isVisible: boolean;
          onClick(callback: () => void): void;
          show(): void;
          hide(): void;
        };
        themeParams: {
          bg_color?: string;
          text_color?: string;
          hint_color?: string;
          link_color?: string;
          button_color?: string;
          button_text_color?: string;
        };
        colorScheme: 'light' | 'dark';
        isExpanded: boolean;
        viewportHeight: number;
        viewportStableHeight: number;
        showAlert?(message: string): void;
        showPopup?(params: any): void;
        openLink?(url: string): void;
      };
    };
  }
}

const STRENGTH_LABELS = [
  "–û—á–µ–Ω—å —Å–ª–∞–±—ã–π", 
  "–°–ª–∞–±—ã–π", 
  "–°—Ä–µ–¥–Ω–∏–π", 
  "–°–∏–ª—å–Ω—ã–π", 
  "–û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π"
];

const PATTERN_LABELS: Record<string, string> = {
  repeat: "–ü–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è —Å–∏–º–≤–æ–ª—ã",
  keyboard_seq: "–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å", 
  numeric_seq: "–ß–∏—Å–ª–æ–≤–∞—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å",
  year: "–°–æ–¥–µ—Ä–∂–∏—Ç –≥–æ–¥ (1990-2025)",
  single_char: "–û–¥–∏–Ω —Å–∏–º–≤–æ–ª",
  only_digits: "–¢–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—ã"
};

export default function App() {
  const [password, setPassword] = createSignal("");
  const [showPassword, setShowPassword] = createSignal(false);
  const [selectedPolicy, setSelectedPolicy] = createSignal<Policy>(NIST_MODERATE);
  const [showPolicySelector, setShowPolicySelector] = createSignal(false);
  const [activeCategory, setActiveCategory] = createSignal<keyof typeof POLICY_CATEGORIES>("basic");
  
  // PWA Install states
  const [deferredPrompt, setDeferredPrompt] = createSignal<any>(null);
  const [showInstallPrompt, setShowInstallPrompt] = createSignal(false);
  const [isInstalled, setIsInstalled] = createSignal(false);
  const [showInstallInstructions, setShowInstallInstructions] = createSignal(false);
  
  // –†–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä–æ–ª—è
  const result = createMemo(() => assessPassword(password(), selectedPolicy()));

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞
  const status = createMemo(() => {
    const comp = result().compliance;
    if (comp.some(c => c.status === "FAIL")) return "FAIL";
    if (comp.some(c => c.status === "WARN")) return "WARN";
    return "OK";
  });

  // PWA Install functions
  const handleInstallClick = async () => {
    if (deferredPrompt()) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
      deferredPrompt().prompt();
      const { outcome } = await deferredPrompt().userChoice;
      console.log(`PWA install outcome: ${outcome}`);
      setDeferredPrompt(null);
      setShowInstallPrompt(false);
    } else {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ä—É—á–Ω–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏
      setShowInstallInstructions(true);
    }
  };

  const detectInstallability = () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ª–∏ —É–∂–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (window.matchMedia('(display-mode: standalone)').matches || 
        (window.navigator as any).standalone === true) {
      setIsInstalled(true);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL –¥–ª—è –ø–æ–∫–∞–∑–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π
    const urlParams = new URLSearchParams(window.location.search);
    const fromTelegram = urlParams.get('from') === 'telegram';
    const showInstructions = urlParams.get('show_instructions') === 'true';
    
    console.log('URL params:', { fromTelegram, showInstructions, search: window.location.search });
    
    if (fromTelegram && showInstructions) {
      // –°—Ä–∞–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∏–∑ Telegram
      console.log('Showing instructions from Telegram');
      setTimeout(() => {
        console.log('Setting showInstallInstructions to true');
        setShowInstallInstructions(true);
      }, 1000); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å PWA
    if ('serviceWorker' in navigator && 'PushManager' in window) {
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
      setTimeout(() => {
        if (!localStorage.getItem('pwa-install-offered')) {
          setShowInstallPrompt(true);
        }
      }, 3000);
    }
  };

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp –∏ PWA
  onMount(() => {
    if (typeof window.Telegram?.WebApp !== "undefined") {
      const tg = window.Telegram.WebApp;
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
      tg.ready();
      tg.expand();
      
      // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
      tg.MainButton.setText("üìÑ –≠–∫—Å–ø–æ—Ä—Ç PDF");
      tg.MainButton.show();
      tg.MainButton.onClick(() => {
        if (password().length > 0) {
          console.log("MainButton PDF export clicked");
          exportPDF(result()).catch(error => {
            console.error("PDF export failed:", error);
            tg.showAlert?.("–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ JSON —ç–∫—Å–ø–æ—Ä—Ç.") || 
            alert("–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ JSON —ç–∫—Å–ø–æ—Ä—Ç.");
          });
        } else {
          tg.showAlert?.("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞") || 
          alert("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");
        }
      });

      console.log("Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
      console.log("–¢–µ–º–∞:", tg.colorScheme);
      console.log("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–µ–º—ã:", tg.themeParams);
    } else {
      console.log("–ó–∞–ø—É—Å–∫ –≤–Ω–µ Telegram WebApp");
      console.log("Current URL:", window.location.href);
      console.log("Search params:", window.location.search);
      // –î–µ—Ç–µ–∫—Ü–∏—è PWA —Ç–æ–ª—å–∫–æ –≤–Ω–µ Telegram
      detectInstallability();
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è beforeinstallprompt
    window.addEventListener('beforeinstallprompt', (e) => {
      e.preventDefault();
      setDeferredPrompt(e);
      setShowInstallPrompt(true);
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è appinstalled
    window.addEventListener('appinstalled', () => {
      setIsInstalled(true);
      setShowInstallPrompt(false);
      setDeferredPrompt(null);
      console.log('PWA was installed');
    });
  });

  const handlePasswordInput = (e: Event) => {
    const target = e.currentTarget as HTMLInputElement;
    setPassword(target.value);
  };

  const handleExportJSON = () => {
    if (password().length > 0) {
      // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π JSON –æ—Ç—á–µ—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–æ –≤—Å–µ–º –ø–æ–ª–∏—Ç–∏–∫–∞–º
      const allResults = assessPasswordAllPolicies(password());
      const extendedReport = {
        ...result(),
        all_policies_analysis: allResults,
        selected_policy: selectedPolicy(),
        analysis_timestamp: new Date().toISOString(),
        report_type: "COMPREHENSIVE_SECURITY_ANALYSIS",
        policies_summary: ALL_POLICIES.map(policy => ({
          name: policy.name,
          display_name: policy.display_name,
          category: policy.category,
          compliance_status: allResults[policy.name].compliance.every(c => c.status === "PASS") ? "PASS" : 
                            allResults[policy.name].compliance.some(c => c.status === "FAIL") ? "FAIL" : "WARN"
        }))
      };
      
      exportJSON(extendedReport);
    } else {
      alert("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");
    }
  };

  const handleExportPDF = () => {
    if (password().length > 0) {
      // –°–æ–∑–¥–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ—Ç—á–µ—Ç —Å –∞–Ω–∞–ª–∏–∑–æ–º –ø–æ –≤—Å–µ–º –ø–æ–ª–∏—Ç–∏–∫–∞–º
      const allResults = assessPasswordAllPolicies(password());
      const extendedReport = {
        ...result(),
        all_policies_analysis: allResults,
        selected_policy: selectedPolicy(),
        analysis_timestamp: new Date().toISOString(),
        report_type: "COMPREHENSIVE_SECURITY_ANALYSIS",
        summary: {
          total_policies: ALL_POLICIES.length,
          passed_policies: Object.values(allResults).filter(r => 
            r.compliance.every(c => c.status === "PASS")
          ).length,
          failed_policies: Object.values(allResults).filter(r => 
            r.compliance.some(c => c.status === "FAIL")
          ).length,
          warning_policies: Object.values(allResults).filter(r => 
            r.compliance.some(c => c.status === "WARN") && 
            !r.compliance.some(c => c.status === "FAIL")
          ).length
        }
      };
      
      exportPDF(extendedReport).catch(error => {
        console.error("PDF export failed:", error);
        alert("–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ PDF. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ JSON —ç–∫—Å–ø–æ—Ä—Ç.");
      });
    } else {
      alert("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞");
    }
  };

  return (
    <div class="container">
      {/* üéØ –ó–ê–ì–û–õ–û–í–û–ö */}
      <header class="app-header">
        <h1 class="app-title">üîê Password & Entropy Lab</h1>
        <p class="app-subtitle">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø–∞—Ä–æ–ª–µ–π</p>
        
        {/* üì± –ö–ù–û–ü–ö–ò –£–°–¢–ê–ù–û–í–ö–ò PWA */}
        <div style="margin-top: 16px; display: flex; gap: 12px; flex-direction: column;">
          {/* –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ */}
          <button 
            class="install-pwa-btn"
            onClick={() => {
              if (typeof window.Telegram?.WebApp !== "undefined") {
                // –í Telegram Mini App - –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ –±—Ä–∞—É–∑–µ—Ä–µ
                const webUrl = 'https://password-entropy-lab-production.up.railway.app/?from=telegram&show_instructions=true';
                if (window.Telegram.WebApp.openLink) {
                  window.Telegram.WebApp.openLink(webUrl);
                } else {
                  // Fallback –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –≤–µ—Ä—Å–∏–π
                  window.open(webUrl, '_blank');
                }
              } else {
                // –í –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ - –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã URL
                const urlParams = new URLSearchParams(window.location.search);
                const fromTelegram = urlParams.get('from') === 'telegram';
                const showInstructions = urlParams.get('show_instructions') === 'true';
                
                console.log('Button click in browser:', { fromTelegram, showInstructions });
                
                if (fromTelegram && showInstructions) {
                  // –ï—Å–ª–∏ –ø—Ä–∏—à–ª–∏ –∏–∑ Telegram - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
                  console.log('Showing instructions from button click');
                  setShowInstallInstructions(true);
                } else {
                  // –û–±—ã—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ PWA —É—Å—Ç–∞–Ω–æ–≤–∫–∏
                  handleInstallClick();
                }
              }
            }}
            style="
              background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
              border: none;
              border-radius: 12px;
              padding: 12px 20px;
              color: white;
              font-weight: 600;
              font-size: 14px;
              cursor: pointer;
              display: flex;
              align-items: center;
              gap: 8px;
              box-shadow: 0 4px 16px rgba(102, 126, 234, 0.3);
              transition: all 0.3s ease;
              width: 100%;
              justify-content: center;
            "
            onMouseOver={(e) => {
              e.currentTarget.style.transform = 'translateY(-2px)';
              e.currentTarget.style.boxShadow = '0 6px 20px rgba(102, 126, 234, 0.4)';
            }}
            onMouseOut={(e) => {
              e.currentTarget.style.transform = 'translateY(0)';
              e.currentTarget.style.boxShadow = '0 4px 16px rgba(102, 126, 234, 0.3)';
            }}
          >
            {(() => {
              if (typeof window.Telegram?.WebApp !== "undefined") {
                return "üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ";
              } else {
                const urlParams = new URLSearchParams(window.location.search);
                const fromTelegram = urlParams.get('from') === 'telegram';
                const showInstructions = urlParams.get('show_instructions') === 'true';
                
                if (fromTelegram && showInstructions) {
                  return "üìã –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏";
                } else {
                  return "üì± –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ";
                }
              }
            })()}
            <span style="font-size: 12px; opacity: 0.9;">‚Üí</span>
          </button>

          {/* –ö–Ω–æ–ø–∫–∞ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π */}
          <button 
            onClick={() => setShowInstallInstructions(true)}
            style="
              background: linear-gradient(135deg, #00c851 0%, #00ff88 100%);
              border: none;
              border-radius: 12px;
              padding: 10px 16px;
              color: white;
              font-weight: 600;
              font-size: 13px;
              cursor: pointer;
              display: flex;
              align-items: center;
              gap: 8px;
              box-shadow: 0 4px 16px rgba(0, 200, 81, 0.3);
              transition: all 0.3s ease;
              width: 100%;
              justify-content: center;
            "
            onMouseOver={(e) => {
              e.currentTarget.style.transform = 'translateY(-2px)';
              e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 200, 81, 0.4)';
            }}
            onMouseOut={(e) => {
              e.currentTarget.style.transform = 'translateY(0)';
              e.currentTarget.style.boxShadow = '0 4px 16px rgba(0, 200, 81, 0.3)';
            }}
          >
            üìã –ü—Ä–æ—á–∏—Ç–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
            <span style="font-size: 12px; opacity: 0.9;">?</span>
          </button>

          <div style="
            font-size: 11px; 
            color: var(--text-secondary); 
            text-align: center; 
            margin-top: 8px;
            line-height: 1.3;
          ">
            üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –æ—Ñ–ª–∞–π–Ω
          </div>
        </div>
      </header>

      {/* üöÄ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–û–ï –ü–†–ï–î–õ–û–ñ–ï–ù–ò–ï –£–°–¢–ê–ù–û–í–ö–ò PWA */}
      <Show when={showInstallPrompt() && !isInstalled()}>
        <div style="
          position: fixed;
          top: 20px;
          left: 20px;
          right: 20px;
          background: linear-gradient(135deg, #00c851 0%, #00ff88 100%);
          border-radius: 16px;
          padding: 20px;
          box-shadow: 0 8px 32px rgba(0, 200, 81, 0.3);
          z-index: 1000;
          animation: slideInDown 0.5s ease-out;
        ">
          <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 12px;">
            <div style="
              background: rgba(255, 255, 255, 0.2);
              border-radius: 50%;
              width: 40px;
              height: 40px;
              display: flex;
              align-items: center;
              justify-content: center;
              font-size: 20px;
            ">
              üì±
            </div>
            <div>
              <div style="font-weight: 700; color: white; font-size: 16px;">
                –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SecPass!
              </div>
              <div style="font-size: 13px; color: rgba(255, 255, 255, 0.9);">
                –ü–æ–ª—É—á–∏—Ç–µ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Å –æ—Ñ–ª–∞–π–Ω —Ä–∞–±–æ—Ç–æ–π
              </div>
            </div>
          </div>
          
          <div style="display: flex; gap: 8px;">
            <button
              onClick={handleInstallClick}
              style="
                flex: 1;
                background: rgba(255, 255, 255, 0.2);
                border: 1px solid rgba(255, 255, 255, 0.3);
                border-radius: 8px;
                padding: 10px 16px;
                color: white;
                font-weight: 600;
                font-size: 14px;
                cursor: pointer;
                transition: all 0.3s ease;
              "
              onMouseOver={(e) => {
                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.3)';
              }}
              onMouseOut={(e) => {
                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.2)';
              }}
            >
              üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
            </button>
            <button
              onClick={() => {
                setShowInstallPrompt(false);
                localStorage.setItem('pwa-install-offered', 'true');
              }}
              style="
                background: transparent;
                border: 1px solid rgba(255, 255, 255, 0.3);
                border-radius: 8px;
                padding: 10px 16px;
                color: white;
                font-weight: 600;
                font-size: 14px;
                cursor: pointer;
                transition: all 0.3s ease;
              "
              onMouseOver={(e) => {
                e.currentTarget.style.background = 'rgba(255, 255, 255, 0.1)';
              }}
              onMouseOut={(e) => {
                e.currentTarget.style.background = 'transparent';
              }}
            >
              –ü–æ–∑–∂–µ
            </button>
          </div>
        </div>
      </Show>

      {/* üìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –î–õ–Ø ANDROID */}
      <Show when={showInstallInstructions()}>
        <div style="
          position: fixed;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          background: rgba(0, 0, 0, 0.8);
          z-index: 2000;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 20px;
        ">
          <div style="
            background: var(--card-bg);
            border-radius: 20px;
            padding: 24px;
            max-width: 400px;
            width: 100%;
            max-height: 80vh;
            overflow-y: auto;
          ">
            <div style="display: flex; align-items: center; gap: 12px; margin-bottom: 20px; position: relative;">
              <div style="
                background: linear-gradient(135deg, #00c851 0%, #00ff88 100%);
                border-radius: 50%;
                width: 48px;
                height: 48px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 24px;
                animation: pulse 2s infinite;
              ">
                üì±
              </div>
              <div style="flex: 1;">
                <div style="font-weight: 700; color: var(--text-primary); font-size: 18px;">
                  üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SecPass –Ω–∞ —Ä–∞–±–æ—á–∏–π —Å—Ç–æ–ª!
                </div>
                <div style="font-size: 14px; color: var(--text-secondary);">
                  –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–∏–∂–µ –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
                </div>
              </div>
              
              {/* –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è */}
              <button
                onClick={() => setShowInstallInstructions(false)}
                style="
                  position: absolute;
                  top: -8px;
                  right: -8px;
                  background: rgba(255, 68, 68, 0.9);
                  border: none;
                  border-radius: 50%;
                  width: 32px;
                  height: 32px;
                  color: white;
                  font-weight: bold;
                  font-size: 16px;
                  cursor: pointer;
                  display: flex;
                  align-items: center;
                  justify-content: center;
                  transition: all 0.3s ease;
                  box-shadow: 0 2px 8px rgba(255, 68, 68, 0.3);
                "
                onMouseOver={(e) => {
                  e.currentTarget.style.background = 'rgba(255, 68, 68, 1)';
                  e.currentTarget.style.transform = 'scale(1.1)';
                }}
                onMouseOut={(e) => {
                  e.currentTarget.style.background = 'rgba(255, 68, 68, 0.9)';
                  e.currentTarget.style.transform = 'scale(1)';
                }}
              >
                ‚úï
              </button>
            </div>

            <div style="margin-bottom: 20px;">
              <div style="
                background: rgba(102, 126, 234, 0.1);
                border-left: 4px solid #667eea;
                padding: 16px;
                border-radius: 8px;
                margin-bottom: 16px;
              ">
                <div style="font-weight: 600; color: var(--text-primary); margin-bottom: 8px;">
                  ü§ñ –î–ª—è Android (Chrome/Samsung):
                </div>
                <ol style="margin: 0; padding-left: 20px; color: var(--text-secondary); line-height: 1.6;">
                  <li>–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –º–µ–Ω—é –±—Ä–∞—É–∑–µ—Ä–∞ (—Ç—Ä–∏ —Ç–æ—á–∫–∏ ‚ãÆ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É)</li>
                  <li>–ù–∞–π–¥–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ" –∏–ª–∏ "–î–æ–±–∞–≤–∏—Ç—å –Ω–∞ –≥–ª–∞–≤–Ω—ã–π —ç–∫—Ä–∞–Ω"</li>
                  <li>–ù–∞–∂–º–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å" –≤ –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –æ–∫–Ω–µ</li>
                  <li>–ì–æ—Ç–æ–≤–æ! –ò–∫–æ–Ω–∫–∞ SecPass –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ</li>
                </ol>
                <div style="
                  background: rgba(102, 126, 234, 0.05);
                  padding: 8px 12px;
                  border-radius: 6px;
                  margin-top: 8px;
                  font-size: 12px;
                  color: var(--text-secondary);
                  font-style: italic;
                ">
                  üí° –ï—Å–ª–∏ –Ω–µ –≤–∏–¥–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
                </div>
              </div>

              <div style="
                background: rgba(0, 200, 81, 0.1);
                border-left: 4px solid #00c851;
                padding: 16px;
                border-radius: 8px;
                margin-bottom: 16px;
              ">
                <div style="font-weight: 600; color: var(--text-primary); margin-bottom: 8px;">
                  üçé –î–ª—è iPhone (Safari):
                </div>
                <ol style="margin: 0; padding-left: 20px; color: var(--text-secondary); line-height: 1.6;">
                  <li>–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" (–∫–≤–∞–¥—Ä–∞—Ç —Å–æ —Å—Ç—Ä–µ–ª–∫–æ–π –≤–Ω–∏–∑)</li>
                  <li>–ü—Ä–æ–∫—Ä—É—Ç–∏—Ç–µ –≤–Ω–∏–∑ –∏ –Ω–∞–π–¥–∏—Ç–µ "–ù–∞ —ç–∫—Ä–∞–Ω –î–æ–º–æ–π"</li>
                  <li>–ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å" –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É</li>
                  <li>–ì–æ—Ç–æ–≤–æ! –ò–∫–æ–Ω–∫–∞ SecPass –ø–æ—è–≤–∏—Ç—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–º —ç–∫—Ä–∞–Ω–µ</li>
                </ol>
                <div style="
                  background: rgba(0, 200, 81, 0.05);
                  padding: 8px 12px;
                  border-radius: 6px;
                  margin-top: 8px;
                  font-size: 12px;
                  color: var(--text-secondary);
                  font-style: italic;
                ">
                  üí° –ö–Ω–æ–ø–∫–∞ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è" –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞
                </div>
              </div>

              <div style="
                background: rgba(255, 136, 0, 0.1);
                border-left: 4px solid #ff8800;
                padding: 16px;
                border-radius: 8px;
              ">
                <div style="font-weight: 600; color: var(--text-primary); margin-bottom: 8px;">
                  üíª –î–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞ (Chrome/Edge):
                </div>
                <ol style="margin: 0; padding-left: 20px; color: var(--text-secondary); line-height: 1.6;">
                  <li>–ù–∞–π–¥–∏—Ç–µ –∏–∫–æ–Ω–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏ üì± –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ (—Å–ø—Ä–∞–≤–∞)</li>
                  <li>–ù–∞–∂–º–∏—Ç–µ "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å SecPass" –≤ –ø–æ—è–≤–∏–≤—à–µ–º—Å—è –æ–∫–Ω–µ</li>
                  <li>–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–Ω–æ–ø–∫–æ–π "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"</li>
                  <li>–ì–æ—Ç–æ–≤–æ! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—è–≤–∏—Ç—Å—è –≤ –º–µ–Ω—é –ü—É—Å–∫</li>
                </ol>
                <div style="
                  background: rgba(255, 136, 0, 0.05);
                  padding: 8px 12px;
                  border-radius: 6px;
                  margin-top: 8px;
                  font-size: 12px;
                  color: var(--text-secondary);
                  font-style: italic;
                ">
                  üí° –ò–∫–æ–Ω–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –º–æ–∂–µ—Ç –ø–æ—è–≤–∏—Ç—å—Å—è –Ω–µ —Å—Ä–∞–∑—É, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥
                </div>
              </div>
            </div>

            <div style="display: flex; gap: 12px;">
              <button
                onClick={() => setShowInstallInstructions(false)}
                style="
                  flex: 1;
                  background: linear-gradient(135deg, #00c851 0%, #00ff88 100%);
                  border: none;
                  border-radius: 12px;
                  padding: 12px 20px;
                  color: white;
                  font-weight: 600;
                  font-size: 14px;
                  cursor: pointer;
                  transition: all 0.3s ease;
                  box-shadow: 0 4px 16px rgba(0, 200, 81, 0.3);
                "
                onMouseOver={(e) => {
                  e.currentTarget.style.transform = 'translateY(-2px)';
                  e.currentTarget.style.boxShadow = '0 6px 20px rgba(0, 200, 81, 0.4)';
                }}
                onMouseOut={(e) => {
                  e.currentTarget.style.transform = 'translateY(0)';
                  e.currentTarget.style.boxShadow = '0 4px 16px rgba(0, 200, 81, 0.3)';
                }}
              >
                ‚úÖ –ü–æ–Ω—è—Ç–Ω–æ, —Å–ø–∞—Å–∏–±–æ!
              </button>
            </div>
          </div>
        </div>
      </Show>
      
      {/* üõ°Ô∏è –°–ï–õ–ï–ö–¢–û–† –ü–û–õ–ò–¢–ò–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò */}
      <div class="policy-selector">
        <div class="policy-selector-header">
          <label class="policy-label">
            üõ°Ô∏è –°—Ç–∞–Ω–¥–∞—Ä—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
          </label>
          <button
            class="policy-current glow-animation"
            onClick={() => setShowPolicySelector(!showPolicySelector())}
          >
            {selectedPolicy().icon} {selectedPolicy().display_name}
            <span>{showPolicySelector() ? "‚ñ≤" : "‚ñº"}</span>
          </button>
        </div>
        
        <Show when={showPolicySelector()}>
          <div style="
            background: rgba(255, 255, 255, 0.05);
            border: 1px solid var(--border-color);
            border-radius: 16px;
            padding: 20px;
            margin-top: 16px;
            backdrop-filter: blur(10px);
          ">
            {/* üìÇ –ö–ê–¢–ï–ì–û–†–ò–ò */}
            <div class="category-tabs">
              <For each={Object.entries(POLICY_CATEGORIES)}>
                {([key, category]) => (
                  <button
                    class={`category-tab ${activeCategory() === key ? 'active' : ''}`}
                    onClick={() => setActiveCategory(key as keyof typeof POLICY_CATEGORIES)}
                  >
                    {category.title}
                  </button>
                )}
              </For>
            </div>
            
            {/* üìã –û–ü–ò–°–ê–ù–ò–ï –ö–ê–¢–ï–ì–û–†–ò–ò */}
            <div style="
              background: rgba(0, 102, 204, 0.1);
              border-left: 4px solid var(--primary-blue);
              padding: 16px;
              border-radius: 8px;
              margin-bottom: 20px;
            ">
              <p style="
                color: var(--text-secondary);
                font-size: 14px;
                margin: 0;
                font-style: italic;
              ">
                üí° {POLICY_CATEGORIES[activeCategory()].description}
              </p>
            </div>
            
            {/* üõ°Ô∏è –ü–û–õ–ò–¢–ò–ö–ò */}
            <div class="policy-grid">
              <For each={POLICY_CATEGORIES[activeCategory()].policies}>
                {(policy) => (
                  <button
                    class={`policy-item ${selectedPolicy().name === policy.name ? 'active' : ''}`}
                    onClick={() => {
                      setSelectedPolicy(policy);
                      setShowPolicySelector(false);
                    }}
                    style={`
                      border-color: ${selectedPolicy().name === policy.name ? policy.color : 'var(--border-color)'};
                    `}
                  >
                    <div class="policy-icon" style={`
                      background: linear-gradient(135deg, ${policy.color}, ${policy.color}dd);
                      box-shadow: 0 4px 16px ${policy.color}40;
                    `}>
                      {policy.icon}
                    </div>
                    <div class="policy-info">
                      <div style="font-weight: 700; color: var(--text-primary); margin-bottom: 6px; font-size: 16px;">
                        {policy.display_name}
                      </div>
                      <div style="font-size: 13px; color: var(--text-secondary); line-height: 1.4; margin-bottom: 8px;">
                        {policy.description}
                      </div>
                      <div class="policy-meta">
                        <span class="meta-tag">
                          üìè {policy.min_length}+ —Å–∏–º–≤.
                        </span>
                        <span class="meta-tag" style="
                          background: rgba(0, 200, 81, 0.2);
                          border-color: rgba(0, 200, 81, 0.3);
                        ">
                          ‚ö° {policy.min_entropy || 30}+ –±–∏—Ç
                        </span>
                      </div>
                    </div>
                  </button>
                )}
              </For>
            </div>
          </div>
        </Show>
      </div>
      
      {/* üîê –ü–û–õ–ï –í–í–û–î–ê –ü–ê–†–û–õ–Ø */}
      <div class="input-container">
        <input
          type={showPassword() ? "text" : "password"}
          class="input-field"
          placeholder="üîë –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞..."
          onInput={handlePasswordInput}
          value={password()}
        />
        <button
          class="password-toggle"
          onClick={() => setShowPassword(!showPassword())}
          title={showPassword() ? "–°–∫—Ä—ã—Ç—å –ø–∞—Ä–æ–ª—å" : "–ü–æ–∫–∞–∑–∞—Ç—å –ø–∞—Ä–æ–ª—å"}
        >
          {showPassword() ? "üôà" : "üëÅÔ∏è"}
        </button>
      </div>

      {/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –ø–∞—Ä–æ–ª—å */}
      {password().length > 0 && (
        <>
          {/* üéØ –¢–ï–ö–£–©–ò–ô –°–¢–ê–ù–î–ê–†–¢ */}
          <div class="section" style={`
            background: linear-gradient(135deg, ${selectedPolicy().color}15, ${selectedPolicy().color}08);
            border: 2px solid ${selectedPolicy().color};
            box-shadow: 0 4px 16px ${selectedPolicy().color}30;
          `}>
            <div style="display: flex; align-items: center; gap: 16px;">
              <div style={`
                background: linear-gradient(135deg, ${selectedPolicy().color}, ${selectedPolicy().color}dd);
                color: white;
                border-radius: 50%;
                width: 48px;
                height: 48px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 20px;
                flex-shrink: 0;
                box-shadow: 0 4px 16px ${selectedPolicy().color}40;
              `}>
                {selectedPolicy().icon}
              </div>
              <div style="flex: 1;">
                <div style="font-weight: 700; color: var(--text-primary); margin-bottom: 4px; font-size: 18px;">
                  üéØ –ê–Ω–∞–ª–∏–∑ –ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É: {selectedPolicy().display_name}
                </div>
                <div style="font-size: 14px; color: var(--text-secondary); line-height: 1.4;">
                  {selectedPolicy().description}
                </div>
              </div>
            </div>
          </div>

          {/* üìä –í–ï–†–î–ò–ö–¢ */}
          <div class={`status-card ${
            status() === "OK" ? "status-ok" : 
            status() === "WARN" ? "status-warn" : "status-fail"
          }`}>
            <div style="font-size: 20px; margin-bottom: 8px;">
              {status() === "OK" ? "üõ°Ô∏è" : status() === "WARN" ? "‚ö†Ô∏è" : "üö®"}
            </div>
            <strong>–í–ï–†–î–ò–ö–¢ –°–ò–°–¢–ï–ú–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò</strong>
            <div style="margin-top: 8px; font-size: 15px;">
              {status() === "OK" ? "‚úÖ –ü–∞—Ä–æ–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" : 
               status() === "WARN" ? "‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏" : 
               "‚ùå –ü–∞—Ä–æ–ª—å –ù–ï —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"}
            </div>
          </div>

          {/* üìà –û–°–ù–û–í–ù–´–ï –ú–ï–¢–†–ò–ö–ò */}
          <div class="section">
            <div class="section-title">üìà –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</div>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px;">
            <div class="metric">
                <strong>üìè –î–ª–∏–Ω–∞:</strong><br/>
                <span style="font-size: 18px; color: var(--primary-blue);">{result().length}</span> —Å–∏–º–≤–æ–ª–æ–≤
            </div>
            <div class="metric">
                <strong>‚ö° –≠–Ω—Ç—Ä–æ–ø–∏—è:</strong><br/>
                <span style="font-size: 18px; color: var(--success-green);">{result().entropy_bits}</span> –±–∏—Ç
              </div>
            </div>
            <div class="metric" style="text-align: center; margin-top: 12px;">
              <strong>üèÜ –£—Ä–æ–≤–µ–Ω—å —Å–∏–ª—ã:</strong><br/>
              <span style={`
                font-size: 20px; 
                font-weight: 700;
                color: ${result().strength >= 3 ? 'var(--success-green)' : 
                        result().strength >= 2 ? 'var(--warning-orange)' : 'var(--danger-red)'};
              `}>
                {STRENGTH_LABELS[result().strength]} ({result().strength}/4)
              </span>
            </div>
          </div>

          {/* üî§ –ö–õ–ê–°–°–´ –°–ò–ú–í–û–õ–û–í */}
          <div class="section">
            <div class="section-title">üî§ –ê–Ω–∞–ª–∏–∑ —Å–∏–º–≤–æ–ª–æ–≤</div>
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px;">
              <div class={`chip ${result().classes.lower ? 'chip-success' : 'chip-danger'}`}>
                {result().classes.lower ? "‚úÖ" : "‚ùå"} –°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã
              </div>
              <div class={`chip ${result().classes.upper ? 'chip-success' : 'chip-danger'}`}>
                {result().classes.upper ? "‚úÖ" : "‚ùå"} –ó–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
              </div>
              <div class={`chip ${result().classes.digits ? 'chip-success' : 'chip-danger'}`}>
                {result().classes.digits ? "‚úÖ" : "‚ùå"} –¶–∏—Ñ—Ä—ã
              </div>
              <div class={`chip ${result().classes.special ? 'chip-success' : 'chip-danger'}`}>
                {result().classes.special ? "‚úÖ" : "‚ùå"} –°–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã
              </div>
            </div>
          </div>

          {/* üìã –î–ï–¢–ê–õ–¨–ù–û–ï –°–û–û–¢–í–ï–¢–°–¢–í–ò–ï –ü–û–õ–ò–¢–ò–ö–ï */}
          <div class="section">
            <div class="section-title">üìã –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É {selectedPolicy().display_name}:</div>
            <For each={result().compliance}>
              {(rule) => (
                <div style={`
                  background: ${rule.status === "PASS" ? "rgba(0, 200, 81, 0.1)" : 
                              rule.status === "WARN" ? "rgba(255, 187, 51, 0.1)" : "rgba(255, 68, 68, 0.1)"};
                  border: 1px solid ${rule.status === "PASS" ? "rgba(0, 200, 81, 0.3)" : 
                              rule.status === "WARN" ? "rgba(255, 187, 51, 0.3)" : "rgba(255, 68, 68, 0.3)"};
                  border-radius: 12px;
                  padding: 12px;
                  margin-bottom: 8px;
                `}>
                  <div style={`
                    display: flex;
                    align-items: center;
                    gap: 8px;
                    font-weight: 600;
                    color: ${rule.status === "PASS" ? "var(--success-green)" : 
                            rule.status === "WARN" ? "var(--warning-orange)" : "var(--danger-red)"};
                    margin-bottom: 4px;
                  `}>
                    {rule.status === "PASS" ? "‚úÖ" : rule.status === "WARN" ? "‚ö†Ô∏è" : "‚ùå"} 
                    {rule.rule}
                  </div>
                  {rule.details && (
                    <div style={`
                      font-size: 12px;
                      color: var(--text-secondary);
                      margin-left: 24px;
                      font-style: italic;
                    `}>
                      üí° {rule.details}
                    </div>
                  )}
                </div>
              )}
            </For>
          </div>

          {/* –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã */}
          {(result().patterns.length > 0 || result().dictionary_hits.length > 0) && (
            <div class="section">
              <div class="section-title" style="color: #721c24;">‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:</div>
              <ul class="issue-list">
                <For each={result().patterns}>
                  {(pattern) => (
                    <li>{PATTERN_LABELS[pattern] || pattern}</li>
                  )}
                </For>
                <For each={result().dictionary_hits}>
                  {(hit) => (
                    <li>–ù–∞–π–¥–µ–Ω –≤ —Å–ª–æ–≤–∞—Ä–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –ø–∞—Ä–æ–ª–µ–π: "{hit.word}"</li>
                  )}
                </For>
              </ul>
            </div>
          )}

          {/* –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ */}
          {result().fix_suggestions.length > 0 && (
            <div class="section">
              <div class="section-title" style="color: #155724;">üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</div>
              <ul class="suggestion-list">
                <For each={result().fix_suggestions}>
                  {(suggestion) => <li>{suggestion}</li>}
                </For>
              </ul>
            </div>
          )}

          {/* üîí –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò */}
          <div class="section" style="
            background: linear-gradient(135deg, rgba(0, 200, 81, 0.1), rgba(0, 200, 81, 0.05));
            border: 2px solid rgba(0, 200, 81, 0.3);
          ">
            <div style="display: flex; align-items: center; gap: 12px;">
              <div style="
                background: var(--gradient-matrix);
                color: white;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 16px;
                flex-shrink: 0;
              ">
                üîí
              </div>
              <div>
                <div style="font-weight: 700; color: var(--text-primary); margin-bottom: 4px;">
                  üõ°Ô∏è –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </div>
                <div style="font-size: 13px; color: var(--text-secondary); line-height: 1.4;">
                  –í–µ—Å—å –∞–Ω–∞–ª–∏–∑ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ. –ü–∞—Ä–æ–ª–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å–µ—Ç–∏ –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–∞—Ö.
                </div>
              </div>
            </div>
          </div>

          {/* üìä –≠–ö–°–ü–û–†–¢ –û–¢–ß–ï–¢–û–í - –ü–ï–†–ï–ú–ï–©–ï–ù–û –í–ù–ò–ó */}
          <div class="section" style="margin-top: 20px;">
            <div class="section-title">üìä –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤</div>
            <div class="export-buttons">
              <button class="btn btn-secondary" onClick={handleExportJSON}>
                <div class="btn-icon">üìä</div>
                <div class="btn-text">JSON</div>
                <div class="btn-subtext">–î–∞–Ω–Ω—ã–µ</div>
              </button>
              <button class="btn btn-primary" onClick={handleExportPDF}>
                <div class="btn-icon">üìã</div>
                <div class="btn-text">PDF</div>
                <div class="btn-subtext">–û—Ç—á–µ—Ç</div>
              </button>
            </div>
          </div>
        </>
      )}

      {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ –µ—Å–ª–∏ –ø–∞—Ä–æ–ª—å –Ω–µ –≤–≤–µ–¥–µ–Ω */}
      {password().length === 0 && (
        <div style="text-align: center; color: #6c757d; margin-top: 40px;">
          <p>üëÜ –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –≤—ã—à–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞</p>
          <div style="font-size: 12px; margin-top: 16px;">
            <p><strong>–ß—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è:</strong></p>
            <ul style="text-align: left; display: inline-block; margin: 0; padding-left: 20px;">
              <li>–î–ª–∏–Ω–∞ –∏ —Å–ª–æ–∂–Ω–æ—Å—Ç—å</li>
              <li>–≠–Ω—Ç—Ä–æ–ø–∏—è (—Å–ª—É—á–∞–π–Ω–æ—Å—Ç—å)</li>
              <li>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –ø–∞—Ä–æ–ª–∏</li>
              <li>–ö–ª–∞–≤–∏–∞—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã</li>
              <li>–ü–æ–≤—Ç–æ—Ä—ã –∏ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</li>
            </ul>
          </div>
        </div>
      )}
    </div>
  );
}
